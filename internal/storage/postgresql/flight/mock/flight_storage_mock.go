// Code generated by MockGen. DO NOT EDIT.
// Source: flight.go

// Package mock_flight is a generated GoMock package.
package mock_flight

import (
	context "context"
	flight "homework/internal/domain/flight"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
)

// MockFlightStorage is a mock of FlightStorage interface.
type MockFlightStorage struct {
	ctrl     *gomock.Controller
	recorder *MockFlightStorageMockRecorder
}

// MockFlightStorageMockRecorder is the mock recorder for MockFlightStorage.
type MockFlightStorageMockRecorder struct {
	mock *MockFlightStorage
}

// NewMockFlightStorage creates a new mock instance.
func NewMockFlightStorage(ctrl *gomock.Controller) *MockFlightStorage {
	mock := &MockFlightStorage{ctrl: ctrl}
	mock.recorder = &MockFlightStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFlightStorage) EXPECT() *MockFlightStorageMockRecorder {
	return m.recorder
}

// GetFlightById mocks base method.
func (m *MockFlightStorage) GetFlightById(ctx context.Context, flightId uuid.UUID) (flight.Flight, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFlightById", ctx, flightId)
	ret0, _ := ret[0].(flight.Flight)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFlightById indicates an expected call of GetFlightById.
func (mr *MockFlightStorageMockRecorder) GetFlightById(ctx, flightId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFlightById", reflect.TypeOf((*MockFlightStorage)(nil).GetFlightById), ctx, flightId)
}

// GetFlightList mocks base method.
func (m *MockFlightStorage) GetFlightList(ctx context.Context, filter flight.Filter) ([]flight.Flight, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFlightList", ctx, filter)
	ret0, _ := ret[0].([]flight.Flight)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFlightList indicates an expected call of GetFlightList.
func (mr *MockFlightStorageMockRecorder) GetFlightList(ctx, filter interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFlightList", reflect.TypeOf((*MockFlightStorage)(nil).GetFlightList), ctx, filter)
}
