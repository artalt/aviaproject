openapi: 3.0.3
info:
  title: Homework
  description: Homework
  version: 1.0.0
servers:
  - url: 'https'
paths:
  /v1/user:
    get:
      tags:
        - access
      operationId: getAuthUser
      summary: Информация об аутентифицированном пользователе.
      description: Информация об аутентифицированном пользователе.
      responses:
        '200':
          description: Успешный ответ.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfile"
  /v1/flight:
    get:
      tags:
        - flight
      operationId: getFlightList
      summary: Получение списка рейсов
      description: Получение списка прямых рейсов по дате вылета и дате прилета, типу билета, наличию багажа
      parameters:
        - in: query
          name: departure
          schema:
            type: string
          description: 'Откуда'
        - in: query
          name: arrival
          schema:
            type: string
          description: 'Куда'
        - in: query
          name: dateStart
          schema:
            type: string
          description: 'Дата вылета от. Пример: 30-12-2022'
        - in: query
          name: dateEnd
          schema:
            type: string
          description: 'Дата вылета от. Пример: 31-12-2022'
        - in: query
          name: type
          schema:
            type: string
          description: 'Тип билета business|economy'
        - in: query
          name: hasLuggage
          schema:
            type: string
          description: 'С багажом 1 - да, 0 - нет'
      responses:
        '200':
          description: Успешный ответ.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Flight'
  /v1/flight/{id}:
    get:
      tags:
        - flight
      operationId: getFlightById
      summary: Получение информации по рейсу
      description: Просмотр информации о том или ином рейсе (наличие багажа, ручной клади, возврат билета и тд)
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: Id рейса
      responses:
        '200':
          description: Успешный ответ.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flight'

  /v1/order:
    post:
      tags:
        - order
      operationId: orderTicket
      summary: Заказ билета на рейс
      description: Заказ билета на рейс
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderRequest'
      responses:
        '200':
          description: Успешный ответ.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'

  /v1/registration:
    post:
      tags:
        - registration
      operationId: registration
      summary: Регистрация на рейс
      description: Регистрация на рейс
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationRequest'
      responses:
        '204':
          description: Успешная регистрация
        '400':
          description: Регистрация не доступна
components:
  schemas:
    Flight:
      type: object
      required:
        - id
        - number
        - departure
        - arrival
        - departureDateTime
        - arrivalDateTime
        - types
        - hasLuggage
        - ticketsCount
        - canReturn
      properties:
        id:
          type: string
          description: Идентификатор рейса
          format: uuid
        number:
          type: string
          description: Номер рейса
          example: T104
        departure:
          type: string
          description: Откуда
          example: Внуково
        arrival:
          type: string
          description: Куда
          example: Домодедово
        departureDateTime:
          type: string
          description: Дата и время вылета
          example: '12:00 11-11-2022'
        arrivalDateTime:
          type: string
          description: Дата и время прилета
          example: '12:01 11-11-2022'
        types:
          type: string
          description: Типы билетов
          example: business,economy
        hasLuggage:
          type: boolean
          description: Есть ли багаж
          example: true
        ticketsCount:
          type: integer
          description: Количество свободных билетов
          example: 3
        canReturn:
          type: boolean
          description: Можно ли вернуть
          example: true
    CreateOrderRequest:
      type: object
      required:
        - firstName
        - lastName
        - flightId
      properties:
        firstName:
          type: string
          description: Имя пассажира
          example: Test
        lastName:
          type: string
          description: Фамилия пассажира
          example: Testov
        flightId:
          type: string
          description: Идентификатор рейса
          format: uuid
    Order:
      type: object
      required:
        - id
        - paymentLink
        - status
        - ticket
      properties:
        id:
          type: string
          description: Идентификатор заказа
          format: uuid
        paymentLink:
          type: string
          description: Ссылка на оплату
          example: 'https://pleasepay.me'
        status:
          type: string
          description: Статус заказа booked|paid|canceled
          example: booked
        ticket:
          $ref: '#/components/schemas/Ticket'
    Ticket:
      type: object
      required:
        - id
        - flightId
        - status
        - type
        - seat
        - luggage
        - price
        - canReturn
      properties:
        id:
          type: string
          description: Идентификатор билета
          format: uuid
        flightId:
          type: string
          description: Идентификатор рейса
          format: uuid
        status:
          type: string
          description: Статус free|taken
          example: taken
        type:
          type: string
          description: Тип билета business|economy
          example: economy
        passFirstName:
          type: string
          description: Имя пассажира
          example: Test
        passLastName:
          type: string
          description: Фамилия пассажира
          example: Testov
        seat:
          type: string
          description: Место
          example: 11A
        luggage:
          type: integer
          description: Багаж кг
          example: 23
        price:
          type: integer
          description: Цена руб
          example: 30000
        canReturn:
          type: boolean
          description: Можно ли вернуть билет
          example: true
    RegistrationRequest:
      type: object
      required:
        - ticketId
      properties:
        ticketId:
          type: string
          description: Идентификатор билета
          format: uuid
    UserProfile:
      type: object
      required:
        - id
        - login
        - avatarUrl
      properties:
        id:
          type: string
          description: Идентификатор пользователя
          format: uuid
        login:
          type: string
          description: Логин пользователя в системе.
          example: aaryaz10
        avatarUrl:
          type: string
          description: URL по которому можно получить аватар пользователя.
          example: https://i.pravatar.cc/150
